{"version":3,"sources":["components/Grid/index.js","components/Brand/index.js","components/Hero/index.js","components/Links/index.js","components/MainContainer/index.js","App.js","serviceWorker.js","index.js"],"names":["Row","_ref2","fluid","children","react_default","a","createElement","className","concat","Col","_ref3","size","split","map","join","Brand","id","Hero","Links","props","style","href","url","target","color","text","MainContainer","state","sites","backgroundColor","fontFamily","fontSize","fontWeight","components_Brand","components_Hero","this","site","components_Links","key","Component","App","components_MainContainer","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"4UAUO,SAASA,EAATC,GAAkC,IAAnBC,EAAmBD,EAAnBC,MAAOC,EAAYF,EAAZE,SAC3B,OAAOC,EAAAC,EAAAC,cAAA,OAAKC,UAAS,MAAAC,OAAQN,EAAQ,SAAW,GAA3B,+BAA4DC,GAK5E,SAASM,EAATC,GAAiC,IAAlBC,EAAkBD,EAAlBC,KAAMR,EAAYO,EAAZP,SAC1B,OACEC,EAAAC,EAAAC,cAAA,OACEC,UAAWI,EACRC,MAAM,KACNC,IAAI,SAAAF,GAAI,MAAI,OAASA,IACrBG,KAAK,MAEPX,SCXQY,MATR,WACH,OACIX,EAAAC,EAAAC,cAAA,OAAKU,GAAG,iBCQDC,MAVR,WACH,OACIb,EAAAC,EAAAC,cAAA,OAAKU,GAAG,QACJZ,EAAAC,EAAAC,cAAA,oCCOGY,MAVR,SAAeC,GAClB,OACIf,EAAAC,EAAAC,cAAA,OAAKU,GAAG,QAAQI,MAAOD,EAAMC,OACzBhB,EAAAC,EAAAC,cAAA,KAAGe,KAAMF,EAAMG,IAAKC,OAAO,SAASH,MAAO,CAAEI,MAAOL,EAAMC,MAAMI,QAAUL,EAAMM,QCiE7EC,oNA/DXC,MAAQ,CACJC,MAAQ,CACJ,CACIN,IAAK,gDACLG,KAAM,OACNL,MAAO,CACHS,gBAAiB,OACjBC,WAAY,yBACZC,SAAU,OACVP,MAAO,YAGf,CACIF,IAAK,2CACLG,KAAM,UACNL,MAAO,CACHS,gBAAiB,UACjBC,WAAY,wBACZC,SAAU,OACVP,MAAO,WAGf,CACIF,IAAK,+CACLG,KAAM,MACNL,MAAO,CACHS,gBAAiB,OACjBC,WAAY,6BACZC,SAAU,OACVC,WAAY,MACZR,MAAO,qFASnB,OACIpB,EAAAC,EAAAC,cAAA,OAAKU,GAAG,iBACAZ,EAAAC,EAAAC,cAACN,EAAD,KACII,EAAAC,EAAAC,cAACG,EAAD,CAAKE,KAAK,cACNP,EAAAC,EAAAC,cAAC2B,EAAD,OAEJ7B,EAAAC,EAAAC,cAACG,EAAD,CAAKE,KAAK,cACVP,EAAAC,EAAAC,cAAC4B,EAAD,MACCC,KAAKR,MAAMC,MAAMf,IAAI,SAAAuB,GAAI,OACtBhC,EAAAC,EAAAC,cAAC+B,EAAD,CACAC,IAAKF,EAAKd,IACVA,IAAKc,EAAKd,IACVG,KAAMW,EAAKX,KACXL,MAAOgB,EAAKhB,oBArDZmB,cCIbC,MARf,WACE,OACEpC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACfH,EAAAC,EAAAC,cAACmC,EAAD,QCKgBC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO5C,EAAAC,EAAAC,cAAC2C,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.2dc013d9.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\n// Exporting the Container, Row, and Col components from this file\r\n\r\n// This Container component allows us to use a bootstrap container without worrying about class names\r\nexport function Container({ fluid, children }) {\r\n  return <div className={`container${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\r\n}\r\n\r\n// This Row component lets us use a bootstrap row without having to think about class names\r\nexport function Row({ fluid, children }) {\r\n  return <div className={`row${fluid ? \"-fluid\" : \"\"} justify-content-md-center`}>{children}</div>;\r\n}\r\n\r\n// This Col component lets us size bootstrap columns with less syntax\r\n// e.g. <Col size=\"md-12\"> instead of <div className=\"col-md-12\">\r\nexport function Col({ size, children }) {\r\n  return (\r\n    <div\r\n      className={size\r\n        .split(\" \")\r\n        .map(size => \"col-\" + size)\r\n        .join(\" \")}\r\n    >\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\n\r\nexport function Brand() {\r\n    return (\r\n        <div id=\"brand\">\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\n\r\nexport default Brand","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\n\r\nexport function Hero() {\r\n    return (\r\n        <div id=\"Hero\">\r\n            <h1>Steven Parrott</h1>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\n\r\nexport default Hero","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\n\r\nexport function Links(props) {\r\n    return (\r\n        <div id=\"links\" style={props.style}>\r\n            <a href={props.url} target=\"_blank\" style={{ color: props.style.color }}>{props.text}</a>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\n\r\nexport default Links","import React, { Component } from \"react\";\r\nimport { Row, Container, Col } from \"../Grid\";\r\nimport Brand from \"../Brand\"\r\nimport Hero from \"../Hero\"\r\nimport Links from \"../Links\"\r\nimport \"./style.css\";\r\n\r\n\r\nclass MainContainer extends Component {\r\n    state = {\r\n        sites : [\r\n            {\r\n                url: \"https://mochacosine1206.github.io/TriviaGame/\",\r\n                text: \"Triv\",\r\n                style: {\r\n                    backgroundColor: \"pink\",\r\n                    fontFamily: \"duos-paint, sans-serif\",\r\n                    fontSize: \"67px\",\r\n                    color: \"#406ddb\",\r\n                }\r\n            },\r\n            {\r\n                url: \"https://rocky-fjord-61195.herokuapp.com/\",\r\n                text: \"Catfish\",\r\n                style: {\r\n                    backgroundColor: \"#4cccef\",\r\n                    fontFamily: \"flood-std, sans-serif\",\r\n                    fontSize: \"60px\",\r\n                    color: \"yellow\",\r\n                }\r\n            },\r\n            {\r\n                url: \"https://cra-crowdsourced-news.herokuapp.com/\",\r\n                text: \"crA\",\r\n                style: {\r\n                    backgroundColor: \"#ff0\",\r\n                    fontFamily: \"chippewa-falls, sans-serif\",\r\n                    fontSize: \"56px\",\r\n                    fontWeight: \"400\",\r\n                    color: \"purple\",\r\n                }\r\n            },\r\n        ]\r\n    };\r\n\r\n\r\n    render() {\r\n          \r\n        return (\r\n            <div id=\"maincontainer\">\r\n                    <Row>\r\n                        <Col size=\"xs-12 md-3\">\r\n                            <Brand />\r\n                        </Col>\r\n                        <Col size=\"xs-12 md-9\">\r\n                        <Hero />\r\n                        {this.state.sites.map(site => (\r\n                            <Links\r\n                            key={site.url} \r\n                            url={site.url}\r\n                            text={site.text}\r\n                            style={site.style}\r\n                            />\r\n                        ))}\r\n                        </Col>\r\n                    </Row>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default MainContainer;","import React from 'react';\nimport './App.css';\nimport MainContainer from './components/MainContainer'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n    <MainContainer />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}